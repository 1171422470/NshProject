import base64
import os
import random
from tkinter import *
from tkinter.ttk import *
from PIL import Image, ImageTk
from tkinter import messagebox, ttk
import tkinter as TK
from tkinter import filedialog
# from UIDesign import ExcelGUI
from CKAnalysis import ckAnalysis
from DKAnalysis import DKAnalysis
from tkinter import filedialog
import pandas as pd
from io import BytesIO
import datetime


class WinGUI(Tk):
    def __init__(self):
        super().__init__()
        self.__win()
        # 创建一个PhotoImage对象，并加载图片文件
        #农商行logo base64数据格式
        self.ck = ckAnalysis(self)
        self.dk = DKAnalysis(self)
        logoImage = ''
        #将base64数据转换成png图片并存放到本地
        image_data = Image.open(BytesIO(base64.b64decode(logoImage)))

        path = os.getcwd()
        with open(path + '\\nsh.png', 'wb') as f:
            image_data.save(f, format="PNG")
            f.close()
        #展示logo
        self.image = Image.open(path + '\\nsh.png')
        self.image = self.image.resize((200, 40))
        self.image = ImageTk.PhotoImage(self.image)

        self.tk_frame_top_1 = self.__tk_frame_top_1(self)
        self.tk_button_top_button1 = self.__tk_button_top_button1(self.tk_frame_top_1)
        self.tk_button_top_button2 = self.__tk_button_top_button2(self.tk_frame_top_1)
        self.tk_button_top_button3 = self.__tk_button_top_button3(self.tk_frame_top_1)
        self.tk_button_top_button4 = self.__tk_button_top_button4(self.tk_frame_top_1)
        self.tk_label_top_label = self.__tk_label_top_label(self.tk_frame_top_1)
        self.tk_frame_left_1 = self.__tk_frame_left_1(self)
        self.tk_frame_left_top1 = self.__tk_frame_left_top1(self.tk_frame_left_1)
        self.tk_button_left_top_button1 = self.__tk_button_left_top_button1(self.tk_frame_left_top1)
        self.tk_button_left_top_button2 = self.__tk_button_left_top_button2(self.tk_frame_left_top1)
        self.tk_label_left_label1 = self.__tk_label_left_label1(self.tk_frame_left_1)
        self.tk_button_left_button1 = self.__tk_button_left_button1(self.tk_frame_left_1)
        self.tk_button_left_button2 = self.__tk_button_left_button2(self.tk_frame_left_1)
        self.tk_button_left_button3 = self.__tk_button_left_button3(self.tk_frame_left_1)
        self.tk_button_left_button4 = self.__tk_button_left_button4(self.tk_frame_left_1)
        self.tk_button_left_button5 = self.__tk_button_left_button5(self.tk_frame_left_1)
        self.tk_button_left_button6 = self.__tk_button_left_button6(self.tk_frame_left_1)
        self.tk_frame_botton = self.__tk_frame_botton(self)
        self.tk_label_botton_label1 = self.__tk_label_botton_label1(self.tk_frame_botton)
        self.tk_label_button_label2 = self.__tk_label_button_label2(self.tk_frame_botton)
        # self.tk_frame_main_frame = self.__tk_frame_main_frame(self)
        self.tk_label_frame_labelframe1 = self.__tk_label_frame_labelframe1(self)
        #存款分析界面控件
        self.tk_button_ck_button1 = self.__tk_button_ck_button1(self.tk_label_frame_labelframe1)
        self.tk_button_ck_button2 = self.__tk_button_ck_button2(self.tk_label_frame_labelframe1)
        self.tk_button_ck_button3 = self.__tk_button_ck_button3(self.tk_label_frame_labelframe1)
        self.tk_select_box_ck_select1 = self.__tk_select_box_ck_select1(self.tk_label_frame_labelframe1)
        self.tk_label_ck_label1 = self.__tk_label_ck_label1(self.tk_label_frame_labelframe1)
        self.tk_button_ck_button4 = self.__tk_button_ck_button4(self.tk_label_frame_labelframe1)

        self.tk_button_ck_f_button1 = self.__tk_button_ck_f_button1(self.tk_label_frame_labelframe1)
        self.tk_button_ck_f_button2 = self.__tk_button_ck_f_button2(self.tk_label_frame_labelframe1)
        #贷款界面控件
        self.tk_label_frame_labelframe2 = self.__tk_label_frame_labelframe2(self)
        self.tk_button_dk_f_button1 = self.__tk_button_dk_f_button1(self.tk_label_frame_labelframe2)
        self.tk_button_dk_f_button2 = self.__tk_button_dk_f_button2(self.tk_label_frame_labelframe2)
        self.tk_button_dk_f_button3 = self.__tk_button_dk_f_button3(self.tk_label_frame_labelframe2)
        self.tk_button_dk_f_button4 = self.__tk_button_dk_f_button4(self.tk_label_frame_labelframe2)
        self.tk_button_dk_f_button5 = self.__tk_button_dk_f_button5(self.tk_label_frame_labelframe2)

        #按揭贷款分析
        self.tk_button_ajdk_button1 = self.__tk_button_ajdk_button1(self.tk_label_frame_labelframe2)
        self.tk_button_ajdk_button2 = self.__tk_button_ajdk_button2(self.tk_label_frame_labelframe2)
        self.tk_button_ajdk_button3 = self.__tk_button_ajdk_button3(self.tk_label_frame_labelframe2)
        self.tk_button_ajdk_button4 = self.__tk_button_ajdk_button4(self.tk_label_frame_labelframe2)
        self.tk_select_box_ajdk_select1 = self.__tk_select_box_ajdk_select1(self.tk_label_frame_labelframe2)
        self.tk_label_ajdk_label1 = self.__tk_label_ajdk_label1(self.tk_label_frame_labelframe2)

        #资金归行
        self.tk_button_zjgh_button1 = self.__tk_button_zjgh_button1(self.tk_label_frame_labelframe2)
        self.tk_button_zjgh_button2 = self.__tk_button_zjgh_button2(self.tk_label_frame_labelframe2)
        self.tk_button_zjgh_button3 = self.__tk_button_zjgh_button3(self.tk_label_frame_labelframe2)
        self.tk_button_zjgh_button4 = self.__tk_button_zjgh_button4(self.tk_label_frame_labelframe2)
        self.tk_button_zjgh_button5 = self.__tk_button_zjgh_button5(self.tk_label_frame_labelframe2)
        self.tk_button_zjgh_button6 = self.__tk_button_zjgh_button6(self.tk_label_frame_labelframe2)

        # 近5年有贷款往来，现在已经结清了的客户
        self.tk_button_lskh_button1 = self.__tk_button_lskh_button1(self.tk_label_frame_labelframe2)
        self.tk_button_lskh_button2 = self.__tk_button_lskh_button2(self.tk_label_frame_labelframe2)
        self.tk_button_lskh_button3 = self.__tk_button_lskh_button3(self.tk_label_frame_labelframe2)
        self.tk_button_lskh_button4 = self.__tk_button_lskh_button4(self.tk_label_frame_labelframe2)
        self.tk_button_lskh_button5 = self.__tk_button_lskh_button5(self.tk_label_frame_labelframe2)
        self.tk_label_lskh_label1 = self.__tk_label_lskh_label1(self.tk_label_frame_labelframe2)
        self.tk_select_box_lskh_select1 = self.__tk_select_box_lskh_select1(self.tk_label_frame_labelframe2)

        # 贷款测算
        self.tk_button_dkcs_button1 = self.__tk_button_dkcs_button1(self.tk_label_frame_labelframe2)
        self.tk_button_dkcs_button2 = self.__tk_button_dkcs_button2(self.tk_label_frame_labelframe2)
        self.tk_button_dkcs_button3 = self.__tk_button_dkcs_button3(self.tk_label_frame_labelframe2)
        self.tk_button_dkcs_button4 = self.__tk_button_dkcs_button4(self.tk_label_frame_labelframe2)
        self.tk_button_dkcs_button5 = self.__tk_button_dkcs_button5(self.tk_label_frame_labelframe2)

    def __win(self):
        self.title("数据分析")
        # 设置窗口大小、居中
        width = 800
        height = 530
        screenwidth = self.winfo_screenwidth()
        screenheight = self.winfo_screenheight()
        geometry = '%dx%d+%d+%d' % (width, height, (screenwidth - width) / 2, (screenheight - height) / 2)
        self.geometry(geometry)
        self.configure(background="#9DCAFF")
        self.resizable(width=False, height=False)

    def scrollbar_autohide(self, vbar, hbar, widget):
        """自动隐藏滚动条"""

        def show():
            if vbar: vbar.lift(widget)
            if hbar: hbar.lift(widget)

        def hide():
            if vbar: vbar.lower(widget)
            if hbar: hbar.lower(widget)

        hide()
        widget.bind("<Enter>", lambda e: show())
        if vbar: vbar.bind("<Enter>", lambda e: show())
        if vbar: vbar.bind("<Leave>", lambda e: hide())
        if hbar: hbar.bind("<Enter>", lambda e: show())
        if hbar: hbar.bind("<Leave>", lambda e: hide())
        widget.bind("<Leave>", lambda e: hide())

    def v_scrollbar(self, vbar, widget, x, y, w, h, pw, ph):
        widget.configure(yscrollcommand=vbar.set)
        vbar.config(command=widget.yview)
        vbar.place(relx=(w + x) / pw, rely=y / ph, relheight=h / ph, anchor='ne')

    def h_scrollbar(self, hbar, widget, x, y, w, h, pw, ph):
        widget.configure(xscrollcommand=hbar.set)
        hbar.config(command=widget.xview)
        hbar.place(relx=x / pw, rely=(y + h) / ph, relwidth=w / pw, anchor='sw')

    def create_bar(self, master, widget, is_vbar, is_hbar, x, y, w, h, pw, ph):
        vbar, hbar = None, None
        if is_vbar:
            vbar = Scrollbar(master)
            self.v_scrollbar(vbar, widget, x, y, w, h, pw, ph)
        if is_hbar:
            hbar = Scrollbar(master, orient="horizontal")
            self.h_scrollbar(hbar, widget, x, y, w, h, pw, ph)
        self.scrollbar_autohide(vbar, hbar, widget)

    def __tk_frame_top_1(self, parent):
        frame = Frame(parent)
        frame.place(x=0, y=0, width=800, height=80)
        return frame

    def __tk_button_top_button1(self, parent):
        btn = Button(parent, text="工具", takefocus=False, )
        btn.place(x=340, y=18, width=92, height=40)
        return btn

    def __tk_button_top_button2(self, parent):
        btn = Button(parent, text="密码", takefocus=False, )
        btn.place(x=466, y=17, width=92, height=40)
        return btn

    def __tk_button_top_button3(self, parent):
        btn = Button(parent, text="设置", takefocus=False, )
        btn.place(x=587, y=17, width=92, height=40)
        return btn

    def __tk_button_top_button4(self, parent):
        btn = Button(parent, text="退出", takefocus=False, )
        btn.place(x=708, y=17, width=92, height=40)
        return btn

    def __tk_label_top_label(self, parent):
        label = Label(parent, text="", anchor="center", image=self.image)
        label.place(x=2, y=14, width=261, height=52)
        return label

    def __tk_frame_left_1(self, parent):
        frame = Frame(parent, )
        frame.place(x=2, y=85, width=201, height=386)
        return frame

    def __tk_frame_left_top1(self, parent):
        frame = Frame(parent, )
        frame.place(x=1, y=0, width=200, height=41)
        return frame

    def __tk_button_left_top_button1(self, parent):
        btn = Button(parent, text="菜单", takefocus=False, )
        btn.place(x=0, y=2, width=96, height=35)
        return btn

    def __tk_button_left_top_button2(self, parent):
        btn = Button(parent, text="常用菜单", takefocus=False, )
        btn.place(x=100, y=2, width=96, height=35)
        return btn

    def __tk_label_left_label1(self, parent):
        label = Label(parent, text="导航栏", anchor="center", background="#75c3b3")
        label.place(x=2, y=46, width=196, height=38)
        return label

    def __tk_button_left_button1(self, parent):
        btn = Button(parent, text="贷款数据分析", takefocus=False)
        btn.place(x=3, y=88, width=195, height=50)
        return btn

    def __tk_button_left_button2(self, parent):
        btn = Button(parent, text="存款数据分析", takefocus=False)
        btn.place(x=3, y=137, width=195, height=50)
        return btn

    def __tk_button_left_button3(self, parent):
        btn = Button(parent, text="客户数据分析", takefocus=False, )
        btn.place(x=3, y=188, width=195, height=50)
        return btn

    def __tk_button_left_button4(self, parent):
        btn = Button(parent, text="客户流水分析", takefocus=False, )
        btn.place(x=3, y=236, width=195, height=50)
        return btn

    def __tk_button_left_button5(self, parent):
        btn = Button(parent, text="卡业务分析", takefocus=False, )
        btn.place(x=3, y=289, width=195, height=50)
        return btn

    def __tk_button_left_button6(self, parent):
        btn = Button(parent, text="其它业务", takefocus=False, )
        btn.place(x=3, y=334, width=195, height=50)
        return btn

    def __tk_frame_botton(self, parent):
        frame = Frame(parent, )
        frame.place(x=0, y=480, width=800, height=50)
        return frame

    def __tk_label_botton_label1(self, parent):
        label = Label(parent, text="日 期: " + self.update_time(), anchor="center", )
        label.place(x=0, y=10, width=200, height=21)
        return label

    def __tk_label_button_label2(self, parent):
        label = Label(parent, text="", anchor="center", )
        label.place()
        return label

    #获取时间
    def update_time(self):
        # 获取当前时间
        now = datetime.datetime.now()
        # 格式化时间
        formatted_time = now.strftime("%Y-%m-%d")
        return formatted_time

    def __tk_label_frame_labelframe1(self, parent):
        frame = LabelFrame(parent, text="存款数据分析", )
        return frame

    def __tk_button_ck_button1(self, parent):
        btn = Button(parent, text="1.选择存款余额表", takefocus=False, )
        return btn

    def __tk_button_ck_button2(self, parent):
        btn = Button(parent, text="2.分析数据", takefocus=False)
        return btn

    def __tk_button_ck_button3(self, parent):
        btn = Button(parent, text="3.导出数据", takefocus=False, )
        return btn

    def __tk_select_box_ck_select1(self, parent):
        cb = Combobox(parent, state="readonly", )
        cb['values'] = ("20周岁以下", "20到40周岁", "40到60周岁", "60周岁以上")
        cb.set('20周岁以下')
        return cb

    def __tk_label_ck_label1(self, parent):
        label = Label(parent, text="选择年龄段", anchor="center", )
        return label

    def __tk_button_ck_button4(self, parent):
        btn = Button(parent, text="返回上级菜单", takefocus=False, )
        return btn

    def __tk_button_ck_f_button1(self, parent):
        btn = Button(parent, text="1、定期存款分析", takefocus=False, )
        return btn

    def __tk_button_ck_f_button2(self, parent):
        btn = Button(parent, text="退出", takefocus=False, )
        return btn

    def __tk_label_frame_labelframe2(self, parent):
        frame = LabelFrame(parent, text="贷款数据分析", )
        return frame

    def __tk_button_dk_f_button1(self, parent):
        btn = Button(parent, text="1、正常类按揭贷款数据分析", takefocus=False, )
        return btn

    def __tk_button_dk_f_button2(self, parent):
        btn = Button(parent, text="2、贷款客户资金归行情况分析", takefocus=False, )
        return btn

    def __tk_button_dk_f_button3(self, parent):
        btn = Button(parent, text="3、通过近五年的贷款数据，分析流失客户", takefocus=False, )
        return btn

    def __tk_button_dk_f_button4(self, parent):
        btn = Button(parent, text="4、贷款测算", takefocus=False, )
        return btn

    def __tk_button_dk_f_button5(self, parent):
        btn = Button(parent, text="5、退出", takefocus=False, )
        return btn

    def __tk_button_ajdk_button1(self, parent):
        btn = Button(parent, text="1.选择未结清贷款明细文件（数据来源：信贷查询系统）", takefocus=False, )
        return btn

    def __tk_button_ajdk_button2(self, parent):
        btn = Button(parent, text="2.分析数据", takefocus=False, )
        return btn

    def __tk_button_ajdk_button3(self, parent):
        btn = Button(parent, text="3.导出数据", takefocus=False, )
        return btn

    def __tk_button_ajdk_button4(self, parent):
        btn = Button(parent, text="返回上一级", takefocus=False, )
        return btn

    def __tk_select_box_ajdk_select1(self, parent):
        cb = Combobox(parent, state="readonly", )
        cb['values'] = ("一年及以上", "二年及以上", "三年及以上", "四年及以上", "五年及以上")
        cb.set('一年及以上')
        return cb

    def __tk_label_ajdk_label1(self, parent):
        label = Label(parent, text="还款年限", anchor="center", )
        return label

    def __tk_button_zjgh_button1(self, parent):
        btn = Button(parent, text="1.导入贷款余额表（数据来源：ODS）", takefocus=False, )
        return btn

    def __tk_button_zjgh_button2(self, parent):
        btn = Button(parent, text="2.导入2023年底存款余额表（数据来源：ODS）", takefocus=False, )
        return btn

    def __tk_button_zjgh_button3(self, parent):
        btn = Button(parent, text="3.导入当前存款余额表（数据来源：ODS）", takefocus=False, )
        return btn

    def __tk_button_zjgh_button4(self, parent):
        btn = Button(parent, text="4.分析数据", takefocus=False, )
        return btn

    def __tk_button_zjgh_button5(self, parent):
        btn = Button(parent, text="5.导出数据", takefocus=False, )
        return btn

    def __tk_button_zjgh_button6(self, parent):
        btn = Button(parent, text="返回上一级", takefocus=False, )
        return btn

    def __tk_button_lskh_button1(self, parent):
        btn = Button(parent, text="1.选择已结清贷款明细文件（数据来源：信贷查询系统）", takefocus=False, )
        return btn

    def __tk_button_lskh_button2(self, parent):
        btn = Button(parent, text="2.选择未结清贷款明细文件（数据来源：信贷查询系统）", takefocus=False, )
        return btn

    def __tk_button_lskh_button3(self, parent):
        btn = Button(parent, text="3.分析数据", takefocus=False, )
        return btn

    def __tk_button_lskh_button4(self, parent):
        btn = Button(parent, text="4.导出数据", takefocus=False, )
        return btn

    def __tk_button_lskh_button5(self, parent):
        btn = Button(parent, text="返回上一级", takefocus=False, )
        return btn

    def __tk_label_lskh_label1(self, parent):
        label = Label(parent, text="未发生贷款业务时长", anchor="center", )
        return label

    def __tk_select_box_lskh_select1(self, parent):
        cb = Combobox(parent, state="readonly", )
        cb['values'] = ("一年及以上", "二年及以上", "三年及以上", "四年及以上", "五年及以上")
        cb.set('一年及以上')
        return cb

    def __tk_button_dkcs_button1(self, parent):
        btn = Button(parent, text="1.选择贷款余额表（数据来源：ODS）", takefocus=False, )
        return btn

    def __tk_button_dkcs_button2(self, parent):
        btn = Button(parent, text="2.选择贷款回收登记薄（数据来源：ODS）", takefocus=False, )
        return btn

    def __tk_button_dkcs_button3(self, parent):
        btn = Button(parent, text="3.分析数据", takefocus=False, )
        return btn

    def __tk_button_dkcs_button4(self, parent):
        btn = Button(parent, text="4.导出数据", takefocus=False, )
        return btn

    def __tk_button_dkcs_button5(self, parent):
        btn = Button(parent, text="返回上一级", takefocus=False, )
        return btn

class Win(WinGUI):
    def __init__(self, controller):
        self.ctl = controller
        super().__init__()
        self.__event_bind()
        self.__style_config()
        self.ctl.init(self)

    #绑定事件
    def __event_bind(self):
        #点击导航栏存款分析按钮
        self.tk_button_left_button2.bind('<Button>', self.ctl.ckfx)
        #点击存款分析界面定期存款分析按钮
        self.tk_button_ck_f_button1.bind('<Button>', self.ctl.ck_dqkc)
        #点击存款分析界面菜单退出按钮
        self.tk_button_ck_f_button2.bind('<Button>', self.ctl.ck_exit)
        #点击存款界面定期存款分析返回上级菜单按钮
        self.tk_button_ck_button4.bind('<Button>', self.ctl.ckfx)
        #存款分析按钮
        self.tk_button_ck_button2.bind('<Button>', self.ctl.ck_button2)
        #存款导入文件
        self.tk_button_ck_button1.bind('<Button>', self.ctl.ck_button1)
        # 存款导出文件
        self.tk_button_ck_button3.bind('<Button>', self.ctl.ck_button3)

        #贷款界面功能
        # 点击导航栏贷款分析按钮
        self.tk_button_left_button1.bind('<Button>', self.ctl.dkfx)
        #退出
        self.tk_button_dk_f_button5.bind('<Button>', self.ctl.dk_exit)
        # 1.正常类按揭贷款数据分析
        self.tk_button_dk_f_button1.bind('<Button>', self.ctl.dk_ajdk)
        self.tk_button_ajdk_button1.bind('<Button>', self.ctl.DKAnalysis_AJDK_import_file)
        self.tk_button_ajdk_button2.bind('<Button>', self.ctl.DKAnalysis_AJDK_analyse_excel)
        self.tk_button_ajdk_button3.bind('<Button>', self.ctl.DKAnalysis_AJDK_export_file)
        self.tk_button_ajdk_button4.bind('<Button>', self.ctl.dkfx)
        #2.2023年贷款客户资金归行情况分析
        self.tk_button_dk_f_button2.bind('<Button>', self.ctl.dk_zjgh)
        self.tk_button_zjgh_button6.bind('<Button>', self.ctl.dkfx)
        self.tk_button_zjgh_button1.bind('<Button>', self.ctl.DKAnalysis_ZJGH_import_dk202312_file)
        self.tk_button_zjgh_button2.bind('<Button>', self.ctl.DKAnalysis_ZJGH_import_ck202312_file)
        self.tk_button_zjgh_button3.bind('<Button>', self.ctl.DKAnalysis_ZJGH_import_ck_now_file)
        self.tk_button_zjgh_button4.bind('<Button>', self.ctl.DKAnalysis_ZJGH_dk_ck_file_analyse)
        self.tk_button_zjgh_button5.bind('<Button>', self.ctl.DKAnalysis_ZJGH_export)

        # 3.近5年有贷款往来，现在已经结清了的客户
        self.tk_button_dk_f_button3.bind('<Button>', self.ctl.dk_lskh)
        self.tk_button_lskh_button5.bind('<Button>', self.ctl.dkfx)
        self.tk_button_lskh_button1.bind('<Button>', self.ctl.DKAnalysis_LSKH_yjq_import_file)
        self.tk_button_lskh_button2.bind('<Button>', self.ctl.DKAnalysis_LSKH_wjq_import_file)
        self.tk_button_lskh_button3.bind('<Button>', self.ctl.DKAnalysis_LSKH_analysis)
        self.tk_button_lskh_button4.bind('<Button>', self.ctl.DKAnalysis_LSKH_export)

        # 4.贷款测算
        self.tk_button_dk_f_button4.bind('<Button>', self.ctl.dk_dkcs)
        self.tk_button_dkcs_button5.bind('<Button>', self.ctl.dkfx)
        self.tk_button_dkcs_button1.bind('<Button>', self.ctl.DKAnalysis_DKCS_DKYEB_import_file)
        self.tk_button_dkcs_button2.bind('<Button>', self.ctl.DKAnalysis_DKCS_DKHSDJB_import_file)
        self.tk_button_dkcs_button3.bind('<Button>', self.ctl.DKAnalysis_DKCS_analyse_excel)
        self.tk_button_dkcs_button4.bind('<Button>', self.ctl.DKAnalysis_DKCS_export_file)
        pass

    def __style_config(self):
        pass
